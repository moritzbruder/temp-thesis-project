import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

buildscript {
    repositories {
        jcenter()
    }
    
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "com.github.jengelman.gradle.plugins:shadow:5.2.0"
    }
}

plugins {
    id("io.gitlab.arturbosch.detekt").version("1.15.0-RC1")
}

tasks.withType(KotlinCompile).configureEach {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

detekt {
    toolVersion = "1.15.0-RC1"
    input = files("src")
    config = files("config/detekt/detekt.yml")
    buildUponDefaultConfig = true
    reports {
        System.out.println(file("report/detekt.xml").absolutePath)
        xml {
            enabled = true
            destination = file("report/detekt.xml")
        }
        html {
            enabled = true
            destination = file("report/detekt.html")
        }
        txt {
            enabled = true
            destination = file("report/detekt.txt")
        }
    }
}

apply plugin: 'kotlin'
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'application'

group 'de.moritzbruder'
version '0.0.1'
mainClassName = "io.ktor.server.netty.EngineMain"

sourceSets {
    main.kotlin.srcDirs = main.java.srcDirs = ['src']
    test.kotlin.srcDirs = test.java.srcDirs = ['test']
    main.resources.srcDirs = ['resources']
    test.resources.srcDirs = ['testresources']
}

shadowJar {
    baseName = 'activities'
    classifier = null
    version = null
}

repositories {
    mavenLocal()
    jcenter()
    maven { url 'https://kotlin.bintray.com/ktor' }
    maven { url 'https://jitpack.io' }
}

task activitiesDist(type: Copy) {
    from('build/libs') {
        include('activities.jar')
        rename 'activities.jar', 'activities-divmon.jar'
    }
    into('dist')
}
activitiesDist.dependsOn shadowJar

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "io.ktor:ktor-server-netty:$ktor_version"
    implementation "ch.qos.logback:logback-classic:$logback_version"
    implementation "io.ktor:ktor-server-core:$ktor_version"
    implementation "io.ktor:ktor-auth:$ktor_version"
    implementation "io.ktor:ktor-auth-jwt:$ktor_version"
    implementation "io.ktor:ktor-jackson:$ktor_version"
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-joda:2.1.1'
    implementation "io.ktor:ktor-client-core:$ktor_version"
    implementation "io.ktor:ktor-client-apache:$ktor_version"
    implementation "io.ktor:ktor-client-jackson:$ktor_version"
    testImplementation "io.ktor:ktor-server-tests:$ktor_version"
    testImplementation "io.mockk:mockk:$mockk_version"

    // SQL Connections
    def exposed_version = "0.28.1"
    implementation "org.jetbrains.exposed:exposed-core:$exposed_version"
    implementation "org.jetbrains.exposed:exposed-dao:$exposed_version"
    implementation "org.jetbrains.exposed:exposed-jdbc:$exposed_version"
    implementation "org.jetbrains.exposed:exposed-jodatime:$exposed_version"

    // PostgreSQL Driver
    compile 'org.postgresql:postgresql:42.2.14'

    // Input validation (Apache Commons)
    def commons_version = "1.6"
    implementation "commons-validator:commons-validator:$commons_version"
    implementation "commons-codec:commons-codec:$commons_version"

    // Crypto Utils
    implementation 'org.bouncycastle:bcprov-jdk16:1.46'

    // OSM API
    implementation 'de.westnordost:osmapi-map:1.3'

    // GeoJSON POJOs
    implementation 'de.grundid.opendatalab:geojson-jackson:1.14'

    // Coordinate shifting and distance calculation
    implementation 'com.github.grumlimited:geocalc:0.5.8'

}